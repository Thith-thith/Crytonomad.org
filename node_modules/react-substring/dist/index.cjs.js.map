{"version":3,"file":"index.cjs.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react';\nimport escapeRegExp from 'lodash.escaperegexp';\nimport PropTypes from 'prop-types';\n\nexport default class Substring extends React.PureComponent {\n    static propTypes = {\n        /**  Main content as string */\n        children: PropTypes.string,\n\n        /**  Array on Substring objects */\n        substrings: PropTypes.arrayOf(\n            PropTypes.shape({\n                /** Pattern to search substrings for processing */\n                match: PropTypes.oneOfType([\n                    PropTypes.instanceOf(RegExp),\n                    PropTypes.string,\n                    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.instanceOf(RegExp), PropTypes.string])),\n                ]).isRequired,\n\n                /** React component or tag name taking matching content. (Default tag `mark`) */\n                component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n                /** If use match as string - it allows to switch on case sensitive search substring (Default: `false`) */\n                caseSensitive: PropTypes.bool,\n\n                /** Additional props for matching component (can use `style`, `className` or something else) */\n                props: PropTypes.object,\n            })\n        ).isRequired,\n\n        /** Tag name passed to document.createElement to create the outer container element. */\n        outerTagName: PropTypes.string,\n\n        /** Optional inline style to attach to outermost element. */\n        style: PropTypes.object,\n\n        /** Optional CSS class to attach to outermost element. */\n        className: PropTypes.object,\n    };\n\n    static defaultProps = {\n        outerTagName: 'span',\n    };\n\n    processContent(content, substrings) {\n        let contentParts = [content];\n\n        let key = 0;\n        substrings.forEach(({ match, component: Component, caseSensitive, props }) => {\n            props = props || {};\n            Component = Component || 'mark';\n\n            if (!Array.isArray(match)) {\n                match = [match];\n            }\n\n            match.forEach(matchItem => {\n                if (!matchItem) {\n                    return;\n                }\n                let midResult = [];\n                contentParts.forEach(contentPart => {\n                    //Work only with string - another ones are React elements\n                    if (typeof contentPart === 'string') {\n                        if (typeof matchItem === 'string') {\n                            let modificators = 'g';\n                            if (caseSensitive !== true) {\n                                modificators += 'i';\n                            }\n                            matchItem = new RegExp(escapeRegExp(matchItem), modificators);\n                        }\n\n                        let matchResult;\n                        let startIndex = 0;\n                        let lastIndex = 0;\n                        let prevFrom;\n                        while ((matchResult = matchItem.exec(contentPart))) {\n                            const from = matchResult.index;\n                            if (prevFrom === undefined) {\n                                prevFrom = from;\n                            } else {\n                                if (prevFrom === from) {\n                                    break;\n                                } else {\n                                    prevFrom = from;\n                                }\n                            }\n                            const to = matchItem.lastIndex || from + matchResult[0].length;\n\n                            const beforeString = contentPart.slice(startIndex, from);\n                            if (beforeString) {\n                                midResult.push(beforeString);\n                            }\n                            const matchSubstring = contentPart.slice(from, to);\n                            startIndex = to;\n                            lastIndex = to;\n\n                            midResult.push(\n                                <Component key={key++} {...props}>\n                                    {matchSubstring}\n                                </Component>\n                            );\n                        }\n                        const afterString = contentPart.slice(lastIndex);\n                        if (afterString) {\n                            midResult.push(afterString);\n                        }\n                    } else {\n                        midResult.push(contentPart);\n                    }\n                });\n                contentParts = midResult;\n            });\n        });\n\n        return contentParts;\n    }\n\n    render() {\n        const { children: content, substrings, className, style, outerTagName: ResultComponent } = this.props;\n\n        return (\n            <ResultComponent className={className} style={style}>\n                {this.processContent(content, substrings)}\n            </ResultComponent>\n        );\n    }\n}\n"],"names":["Substring","processContent","content","substrings","contentParts","key","forEach","match","Component","component","caseSensitive","props","Array","isArray","matchItem","midResult","contentPart","modificators","RegExp","escapeRegExp","matchResult","startIndex","lastIndex","prevFrom","exec","from","index","undefined","to","length","beforeString","slice","push","matchSubstring","afterString","render","children","className","style","ResultComponent","outerTagName","React","PureComponent","propTypes","PropTypes","string","arrayOf","shape","oneOfType","instanceOf","isRequired","func","bool","object","defaultProps"],"mappings":"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"}